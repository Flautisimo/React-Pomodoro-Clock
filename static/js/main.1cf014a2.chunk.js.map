{"version":3,"sources":["ui/BreakSessionUi.tsx","components/Break.tsx","components/Session.tsx","components/TimeLeft.tsx","App.tsx","index.js"],"names":["BreakSessionContainer","children","props","className","BreakSessionLabel","BreakSessionTime","PlusMinusButton","PlusMinusButtonContainer","Break","breakLength","decrementBreakLengthByOneMinute","incrementBreakLengthByOneMinute","breakLengthInMinutes","moment","duration","asMinutes","id","onClick","Session","sessionLength","decrementSessionLengthByOneMinute","incrementSessionLengthByOneMinute","sessionLengthInMinutes","momentDurationFormatSetup","TimeLeft","handleResetButtonClick","handleStartStopClick","startStopButtonLabel","timeLeft","timerLabel","formattedTimeLeft","format","trim","target","rel","href","App","audioElement","useRef","useState","currentSessionType","setCurrentSessionType","intervalId","setIntervalId","setSessionLength","setBreakLength","setTimeLeft","useEffect","current","play","isStarted","newBreakLength","load","clearInterval","newIntervalId","setInterval","prevTimeLeft","newSessionLength","ref","src","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cf014a2.chunk.js","sourcesContent":["import React from 'react'\n\nexport const BreakSessionContainer: React.FC<React.DetailedHTMLProps<\nReact.HTMLAttributes<HTMLDivElement>, \nHTMLDivElement\n>> = ({children, ...props}) => {\n  return (\n    <div className=\"flex flex-col items-center\" {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport const BreakSessionLabel: React.FC<React.DetailedHTMLProps<\nReact.HTMLAttributes<HTMLParagraphElement>, \nHTMLParagraphElement\n>> = ({children, ...props}) => {\n  return (\n    <p className=\"text-2xl text-yellow-300 font-bold\" {...props}>\n      {children}\n    </p>\n  );\n};\n\nexport const BreakSessionTime: React.FC<React.DetailedHTMLProps<\nReact.HTMLAttributes<HTMLParagraphElement>, \nHTMLParagraphElement\n>> = ({children, ...props}) => {\n  return (\n    <p className=\"text-5xl font-bold text-white\" {...props}>\n      {children}\n    </p>\n  );\n};\n\nexport const PlusMinusButton: React.FC<React.DetailedHTMLProps<\nReact.ButtonHTMLAttributes<HTMLButtonElement>, \nHTMLButtonElement\n>> = ({children, ...props}) => {\n  return (\n    <button className=\"mt-2 text-lg text-gray-800 px-4 py-2 bg-green-200 rounded\" {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport const PlusMinusButtonContainer: React.FC<React.DetailedHTMLProps<\nReact.HTMLAttributes<HTMLDivElement>, \nHTMLDivElement\n>> = ({children, ...props}) => {\n  return (\n    <div className=\"grid grid-flow-col gap-2 rounded\"{...props}>\n      {children}\n    </div>\n  );\n};","import moment from 'moment';\nimport React from 'react';\nimport { BreakSessionContainer, BreakSessionLabel, BreakSessionTime, PlusMinusButton, PlusMinusButtonContainer } from '../ui/BreakSessionUi';\n\nconst Break: React.FC<Props> = ({\n  breakLength,\n  decrementBreakLengthByOneMinute,\n  incrementBreakLengthByOneMinute\n}) => {\n  const breakLengthInMinutes = moment.duration(breakLength, 's').asMinutes();\n  return (\n        <BreakSessionContainer>\n            <BreakSessionLabel id='break-label'>Break</BreakSessionLabel>\n            <BreakSessionTime id='break-length'>{breakLengthInMinutes}</BreakSessionTime>\n            <PlusMinusButtonContainer>\n            <PlusMinusButton id='break-decrement' onClick={decrementBreakLengthByOneMinute}>\n              -\n            </PlusMinusButton>\n            <PlusMinusButton id='break-increment' onClick={incrementBreakLengthByOneMinute}>\n              +\n            </PlusMinusButton>\n            </PlusMinusButtonContainer>\n        </BreakSessionContainer>\n  );    \n};\n\ntype Props = {\n  breakLength: number\n  decrementBreakLengthByOneMinute: () => void\n  incrementBreakLengthByOneMinute: () => void\n}\n\nexport default Break;","import moment from 'moment';\nimport React from 'react';\nimport { BreakSessionContainer, BreakSessionLabel, BreakSessionTime, PlusMinusButtonContainer, PlusMinusButton } from '../ui/BreakSessionUi';\n\nconst Session: React.FC<Props> = ({\n    sessionLength,\n    decrementSessionLengthByOneMinute,\n    incrementSessionLengthByOneMinute\n  }) => {\n  \n  const sessionLengthInMinutes = moment.duration(sessionLength, 's').asMinutes();\n  return (\n        <BreakSessionContainer>\n            <BreakSessionLabel id='session-label'>Session</BreakSessionLabel>\n            <BreakSessionTime id='session-length'>{sessionLengthInMinutes}</BreakSessionTime>\n            <PlusMinusButtonContainer>\n            <PlusMinusButton id='session-decrement' onClick={decrementSessionLengthByOneMinute}>\n              -\n            </PlusMinusButton>\n            <PlusMinusButton id='session-increment' onClick={incrementSessionLengthByOneMinute}>\n              +\n            </PlusMinusButton>\n            </PlusMinusButtonContainer>\n        </BreakSessionContainer>\n  );    \n};\n\ntype Props = {\n  sessionLength: number\n  decrementSessionLengthByOneMinute: () => void\n  incrementSessionLengthByOneMinute: () => void\n}\n\nexport default Session;","import React from 'react'\nimport moment from 'moment'\nimport momentDurationFormatSetup from 'moment-duration-format';\n\n// @ts-ignore\nmomentDurationFormatSetup(moment);\n\nconst TimeLeft: React.FC<Props> = ({ \n    handleResetButtonClick,\n    handleStartStopClick, \n    startStopButtonLabel,\n    timeLeft, \n    timerLabel \n}) => {\n\n    const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss', { trim: false });\n    return (\n        <div>\n        <div className=\"flex flex-col justify-evenly items-center w-64 h-64 bg-yellow-300 rounded\">\n        <p className=\"text-red-900 text-4xl font-bold\" id=\"timer-label\">\n            {timerLabel}\n        </p>\n        <p className=\"font-clock text-4xl font-bold\" id=\"time-left\">\n            {formattedTimeLeft}\n        </p>\n        <button \n            className=\"bg-red-600 border-2 text-white font-extrabold border-red-700 border-solid px-11 py-2 rounded-md\" \n            id=\"start_stop\" \n            onClick={handleStartStopClick}\n            >\n            {startStopButtonLabel}\n        </button>\n        <button \n            className=\"bg-gray-500 border-2 text-white font-bold rounded-md border-gray-600 border-solid px-10 py-1\" \n            id=\"reset\" \n            onClick={handleResetButtonClick}\n            >\n            Reset\n        </button>\n        </div>\n        <div className=\"author\">\n        {\" \"}\n        Made by{\" \"}\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/Flautisimo\">\n          Flautisimo\n        </a>\n      </div>\n      </div>\n    );\n};\n\ntype Props = {\n    handleResetButtonClick: () => void\n    handleStartStopClick: () => void\n    startStopButtonLabel: string\n    timeLeft: number\n    timerLabel: string\n}\n\n\nexport default TimeLeft;","import React, { useState, useEffect, useRef } from 'react';\nimport Break from \"./components/Break\";\nimport './assets/main.css';\nimport Session from './components/Session';\nimport TimeLeft from './components/TimeLeft';\n\nfunction App() {\n  const audioElement = useRef<HTMLAudioElement>(null);\n  const [currentSessionType, setCurrentSessionType] = useState('Session'); // 'Session' or 'Break' \n  const [intervalId, setIntervalId] = useState<NodeJS.Timeout | null>(null);  \n  const [sessionLength, setSessionLength] = useState(25 * 60);\n  const [breakLength, setBreakLength] = useState(5 * 60);\n  const [timeLeft, setTimeLeft] = useState(sessionLength);\n\n  //Change timeLeft whenever sessionLength changes\n  useEffect(() => {\n      setTimeLeft(sessionLength);\n  }, [sessionLength]);\n      \n  // listen to timeLeft changes\n  useEffect(() => {\n      // if it is zero\n      if (timeLeft === 0) {\n        // play the audio\n        audioElement?.current?.play() // optional chaining\n        // change Session to Break or Break to Session\n        if (currentSessionType === 'Session') {\n          setCurrentSessionType('Break');\n          setTimeLeft(breakLength);\n        } else if (currentSessionType === 'Break') {\n          setCurrentSessionType('Session');\n          setTimeLeft(sessionLength);\n        }\n      }\n  }, [breakLength, currentSessionType, sessionLength, timeLeft]);\n\n  const decrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength - 60;\n    if (newBreakLength > 0) {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength + 60;\n    if (newBreakLength <= 60 * 60) {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const decrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength - 60;\n    if (newSessionLength > 0) {\n      setSessionLength(newSessionLength);\n    }\n  };\n\n  const incrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength + 60;\n    if (newSessionLength < 61 * 60) {\n      setSessionLength(newSessionLength);\n    }\n  };\n\n\n  const isStarted = intervalId !== null;\n  const handleStartStopClick = () => {\n      if (isStarted) {\n      //if we are in started mode:\n      //we want to stop the timer\n      //clearInterval\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n        setIntervalId(null);\n      } else {\n      //if we are in stopped mode:\n      //decrement timeLeft by one every second (1000ms)\n      //to do this we'll use setInterval\n          const newIntervalId = setInterval(() => {\n              setTimeLeft(prevTimeLeft => prevTimeLeft - 1)\n          }, 1000);\n          setIntervalId(newIntervalId);\n      } \n  };\n\n  const handleResetButtonClick = () => {\n    // reset audio\n    audioElement?.current?.load();\n    // clear the timeout interval\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n    // set the intervalId null\n    setIntervalId(null);\n    // set the sessiontype to 'Session'\n    setCurrentSessionType('Session');\n    // reset the session length to 25 minutes\n    setSessionLength(60 * 25);\n    // reset the break length to 5 minutes\n    setBreakLength(60 * 5);\n    // reset the timer to 25 minutes (initial session length)\n    setTimeLeft(60 * 25);\n  };\n\n  return (\n  <div className=\"flex flex-col h-screen items-center justify-center bg-green-600\">\n    <div className=\"flex w-full justify-around\">\n    <Break \n      breakLength={breakLength}\n      decrementBreakLengthByOneMinute={decrementBreakLengthByOneMinute}\n      incrementBreakLengthByOneMinute={incrementBreakLengthByOneMinute}\n    />\n    <TimeLeft\n    handleResetButtonClick={handleResetButtonClick} \n    handleStartStopClick={handleStartStopClick} \n    timerLabel={currentSessionType} \n    startStopButtonLabel={isStarted ? 'Stop' : 'Start'}\n    timeLeft={timeLeft} \n    />\n    <Session \n      sessionLength={sessionLength}\n      decrementSessionLengthByOneMinute={decrementSessionLengthByOneMinute}\n      incrementSessionLengthByOneMinute={incrementSessionLengthByOneMinute}\n    />\n    </div>\n      <audio id=\"beep\" ref={audioElement}>\n      <source src=\"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\" type=\"audio/mpeg\" />\n    </audio>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}